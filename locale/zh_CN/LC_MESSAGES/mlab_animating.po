# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Mayavii <1444742843@qq.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.1.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-18 02:20+0000\n"
"PO-Revision-Date: 2019-04-27 07:31+0000\n"
"Last-Translator: Mayavii <1444742843@qq.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/tkoyama010/teams/98399/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:5
msgid "Animating the data"
msgstr "将数据做成动画"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:7
msgid ""
"Often it isn't sufficient to just plot the data.  You may also want to "
"change the data of the plot and update the plot without having to recreate "
"the entire visualization, for instance to do animations, or in an "
"interactive application. Indeed, recreating the entire visualization is very"
" inefficient and leads to very jerky looking animations. To do this, mlab "
"provides a very convenient way to change the data of an existing mlab "
"visualization.  Consider a very simple example.  The "
"`mlab.test_simple_surf_anim` function has this code::"
msgstr ""
"有时数据可视化并不能满足需求，我们希望能改变数据并更新它并重新可视化，比如动画。事实上，重新创建全部的可视化是非常低效的，而且会非常不稳定。为了解决这个问题，mlab提供了非常方便的方法，我们在这里给出一个非常简单的示例。\n"
"请参考：`mlab.test_simple_surf_anim`"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:24
msgid ""
"The first two lines define a simple plane and view that.  The next three "
"lines animate that data by changing the scalars producing a plane that "
"rotates about the origin.  The key here is that the `s` object above has a "
"special attribute called `mlab_source`.  This sub-object allows us to "
"manipulate the points and scalars.  If we wanted to change the `x` values we"
" could set that too by::"
msgstr ""
"代码的前两行绘制了一个简单的平面。定义的函数体内部通过循环的方式,不断改变标量值使平面绕原点旋转。这里的关键之处在于传标量数据的`s`对象，它有一个特殊的属性`.mlab_source`，我们可以对它的子对象`.scalars`进行修改。如果我们相对坐标信息进行修改，我们同样可以这样做。"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:33
msgid ""
"The only thing to keep in mind here is that the shape of `x` should not be "
"changed."
msgstr "我们仅需记住，不应该改变x的数组维度"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:36
msgid ""
"Note that many of the examples discussed here may not appear to be animated "
"at all and you may just see the final state of the animation. If you save a "
"screenshot of the image at each stage of the animation, you would get the "
"correct result.  However, you will not get the visual effect on screen.  See"
" the section :ref:`animating_a_visualization` to learn more on the use of "
"the `@animate` decorator (:func:`mayavi.mlab.animate`) to achieve this. We "
"show a small example here, where we rewrite the above to animate nicely::"
msgstr ""
"需要引起注意的是，这里所讨论的一些案例不一定是动画，仅仅是动画的最后一帧。如果将图像的每帧截图都保存下来，虽然您也将会得到相应的结果，但是您无法得到想要的效果。参考`animating_a_visualization`，学习`@animate`装饰器的用法来完成它。我们在这里展示一个简单的案例重写上面的动画。"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:61
msgid ""
"In the above, note that we wrap the iteration in a function which is a "
"generator and decorate it with the `@mlab.animate` decorator."
msgstr "如上面的案例，我们对生成器进行装饰，并将迭代封装在函数体中。"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:64
msgid ""
"If multiple values have to be changed, you can use the `set` method of the "
"`mlab_source` to set them as shown in the more complicated example below::"
msgstr "如果有多个值需要更新，您可以使用mlab的属性`mlab_source`，调用该属性的`set`方法，从而完成更加复杂的动画，案例如下："

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:89
msgid ""
"Notice the use of the `set` method above. With this method, the "
"visualization is recomputed only once.  In this case, the shape of the new "
"arrays has not changed, only their values have.  If the shape of the array "
"changes then one should use the `reset` method as shown below::"
msgstr ""
"需要注意的是`set`方法使用的场合，使用该方法，渲染智慧重新计算一次。在这个案例中，数组的维度并没有发生变化，仅仅是其数值的更新。当数值的维度也发生变化的时候，我们需要用"
" `reset`方法，案例如下："

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:106
msgid ""
"Many standard examples for animating data are provided with mlab.  Try the "
"examples with the name `mlab.test_<name>_anim`, i.e. where the name ends "
"with an `_anim` to see how these work and run."
msgstr ""
"Mayavi提供了许多使用mlab动画的标准案例。您可以运行mlab.test_<name>_anim\n"
"说明：案例的名字都以anim结尾，这些例子用以说明是它们如何工作的。"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:114
msgid ""
"It is important to remember distinction between `set` and `reset`. Use `set`"
" or directly set the attributes (`x`, `y`, `scalars` etc.) when you are not "
"changing the shape of the data but only the values. Use `reset` when the "
"arrays are changing shape and size.  Reset usually regenerates all the data "
"and can be inefficient when compared to `set` or directly setting the "
"traits."
msgstr ""
"需要引起重视的是，set 和 reset 方法是有所差别的。当你没有改变数据的维度仅仅是对数值进行修改，使用 set 方法可以直接定义属性 (`x`, "
"`y`, `scalars` "
"等)。但当数组的维度发生变化时候，则需要使用`reset`方法，它的行为通常是重新生成是所有的数据，相比`set`方法和设置特性而言，这种做法效率更低。"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:123
msgid ""
"When creating a Mayavi pipeline, as explained in the following subsection, "
"instead of using ready-made plotting function, the `mlab_source` attribute "
"is created only on sources created via `mlab`. Pipeline created entirely "
"using `mlab` will present this attribute."
msgstr ""
"如果不直接使用预制好的绘图函数，而是要配置Mayavi的pipeline管线，则`mlab_source` "
"属性只能先从sources数据源，经由mlab进行创建，更多细节将在子章节进行介绍。完全由mlab创建的管线，将提供这个属性。"

#: ../../mayavi/docs/source/mayavi/mlab_animating.rst:131
msgid ""
"If you are animating several plot objects, each time you modify the data "
"with there `mlab_source` attribute, Mayavi will trigger a refresh of the "
"scene. This operation might take time, and thus slow your animation. In this"
" case, the tip :ref:`acceleration_mayavi_scripts` may come in handy."
msgstr ""
"如果您有多个动画对象，每次您使用`mlab_source`属性进行修改，Mayavi都会对当前的scene层级弹出一个refresh用于更新的对话框。这个操作会耗费一定时间，会使您的动画变慢。下面这个案例能帮到您：`acceleration_mayavi_scripts`"
