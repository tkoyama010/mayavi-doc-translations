# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Mayavii <1444742843@qq.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.4.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-22 00:38+0000\n"
"PO-Revision-Date: 2019-04-27 07:31+0000\n"
"Last-Translator: Mayavii <1444742843@qq.com>, 2021\n"
"Language-Team: Chinese (China) (https://app.transifex.com/tkoyama010/teams/98399/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:4
msgid "3D Plotting functions for numpy arrays"
msgstr "关于numpy数组的3D可视化"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:6
msgid ""
"Visualization can be created in `mlab` by a set of functions operating on "
"numpy arrays."
msgstr "通过`mlab`的一系列函数，可以对numpy进行数据可视化。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:9
msgid ""
"The mlab plotting functions take numpy arrays as input, describing the "
"``x``, ``y``, and ``z`` coordinates of the data. They build full-blown "
"visualizations: they create the data source, filters if necessary, and add "
"the visualization modules. Their behavior, and thus the visualization "
"created, can be fine-tuned through keyword arguments, similarly to pylab. In"
" addition, they all return the visualization module created, thus "
"visualization can also be modified by changing the attributes of this "
"module."
msgstr ""
"`mlab`函数将numpy数组作为输入，描述数据的``x``, ``y``, ``z`` "
"坐标，并以此构建成熟的可视化：如果有需要，它们可以完成data source数据源层级、filter滤波层级以及visualization "
"module可视化模块层级的创建。与matplotlib的pylab类似，它们的创建过程可以通过关键字参数进行调整。此外，它们都可以返回创建的可视化模块对应的对象，因此可以通过修改它们的属性对可视化进行修改。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:20
msgid ""
"In this section, we only list the different functions. Each function is "
"described in detail in the :ref:`mlab-reference`, at the end of the user "
"guide, with figures and examples. Please follow the links."
msgstr "这一节，我们仅列出不同的函数。对于每一个函数的具体用法请参考`mlab-reference`，在这份指南的最后，我们将附上图像和案例。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:26
msgid "0D and 1D data"
msgstr "0D数据 和 1D数据"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:35
msgid "|points3d|"
msgstr "points3d 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:51
msgid "points3d"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:35
msgid ""
":func:`points3d` |hack| Plots glyphs (like points) at the position of the "
"supplied data, described by ``x``, ``y``, ``z`` numpy arrays of the same "
"shape."
msgstr ""
"`points3d`方法\n"
"它将显示数据所给位置的图形（如点状，可以是其他形状），其位置信息由numpy数组给定，坐标由``x``, ``y``, ``z`` 表示。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:29
msgid "<br>"
msgstr "<br>"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:41
msgid "|plot3d|"
msgstr "plot3d 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:48
msgid "plot3d"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:41
msgid ""
":func:`plot3d` |hack| Plots line between the supplied data, described by "
"``x``, ``y``, ``z`` 1D numpy arrays of the same length."
msgstr "`plot3d`方法将绘制线，数据``x``, ``y``, ``z`` 坐标由1D的numpy数组给定，并且三个坐标的长度必须一致。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:55
msgid "2D data"
msgstr "2D数据"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:59
msgid "|imshow|"
msgstr "imshow方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:127
msgid "imshow"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:59
msgid ":func:`imshow` |hack| View a 2D array as an image."
msgstr "imshow 可以将2D数组可视化成一张图像。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:63
msgid "|surf|"
msgstr "surf 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:136
msgid "surf"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:63
msgid ""
":func:`surf` |hack| View a 2D array as a carpet plot, with the z axis "
"representation through elevation the value of the array points."
msgstr "surf方法将2D数组平铺成一张毯子，并用z坐标表示高度。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:69
msgid "|contour_surf|"
msgstr "contour_surf 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:130
msgid "contour_surf"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:69
msgid ""
":func:`contour_surf` |hack| View a 2D array as line contours, elevated "
"according to the value of the array points."
msgstr "`contour_surf`将使用2D数组绘制等高线，并用一个坐标表示等高线的高度。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:74
msgid "|mesh|"
msgstr "mesh 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:139
msgid "mesh"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:74
msgid ""
":func:`mesh` |hack| Plot a surface described by three 2D arrays, ``x``, "
"``y``, ``z`` giving the coordinates of the data points as a grid. |hack| "
"Unlike :func:`surf`, the surface is defined by its ``x``, ``y`` and ``z`` "
"coordinates with no privileged direction. More complex surfaces can be "
"created."
msgstr ""
"`mesh`方法用于绘制面绘制，由3个2D数组给定， ``x``, ``y``, ``z`` "
"将坐标以网格形式绘出。与`surf`方法不同，2D数组``x``, ``y`` ,``z`` "
"所给定的网格连接方式不是默认给出的，它需要特别给定，因此能创建更复杂的网格连接形式。译者注：更多细节读者请阅读`Data representation "
"in Mayavi`"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:84
msgid "|barchart|"
msgstr "barchart方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:142
msgid "barchart"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:84
msgid ""
":func:`barchart` |hack| Plot an array ``s``, or a set of points with "
"explicit coordinates arrays, ``x``, ``y`` and ``z``, as a bar chart, eg for "
"histograms. |hack| This function is very versatile and will accept 2D or 3D "
"arrays, but also clouds of points, to position the bars."
msgstr ""
"`barchart`方法将对数组或者对一系列给定的坐标点进行可视化。例如，柱状图中，x,y,z表示坐标，s表示高度。该函数通用性较强，可以接受2D或3D数据，也可以接受点云。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:94
msgid "|triangular_mesh|"
msgstr "triangular_mesh 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:133
msgid "triangular_mesh"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:94
msgid ""
":func:`triangular_mesh` |hack| Plot a triangular mesh, fully specified by "
"``x``, ``y`` and ``z`` coordinates of its vertices, and the (n, 3) array of "
"the indices of the triangles."
msgstr "triangular_mesh 用于绘制三角形网格，其顶点由``x``, ``y``,``z``坐标给定，坐标的维度为 (n, 3) 。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst-1
msgid "Vertical scale of  :func:`surf` and :func:`contour_surf`"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:105
msgid ""
":func:`surf` and :func:`contour_surf` can be used as 3D representation of 2D"
" data. By default the z-axis is supposed to be in the same units as the x "
"and y axis, but it can be auto-scaled to give a 2/3 aspect ratio. This "
"behavior can be controlled by specifying the \"warp_scale='auto'\"."
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst-1
msgid "From data points to surfaces."
msgstr "从点到面："

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:113
msgid ""
"Knowing the positions of data points is not enough to define a surface, "
"connectivity information is also required. With the functions :func:`surf` "
"and :func:`mesh`, this connectivity information is implicitly extracted from"
" the shape of the input arrays: neighboring data points in the 2D input "
"arrays are connected, and the data lies on a grid. With the function "
":func:`triangular_mesh`, connectivity is explicitly specified. Quite often, "
"the connectivity is not regular, but is not known in advance either. The "
"data points lie on a surface, and we want to plot the surface implicitly "
"defined. The `delaunay2d` filter does the required nearest-neighbor "
"matching, and interpolation, as shown in the "
"(:ref:`example_surface_from_irregular_data`)."
msgstr ""
"仅仅知道数据的点的位置是不足以定义网格的，我们还需要知道点之间的连接方式。`surf` 和 `mesh`，它们的连接方式隐含在所加载的数据里，即数据的组织方式决定了它们的网格连接方式，相邻的2D数组彼此之间最近的点相互连接。对于，`triangular_mesh`其连接方式同样是隐含在数据中。比较常见的情形是，所要构建的连接方式并非正交网格。而面绘制的数据都基于网格，因此我们需要特别指定网格的组织形式。如果添加`delaunay2d` filter滤波层级就会匹配相邻的点进行连接，并且进行插值。（请参考：`example_surface_from_irregular_data`）\n"
"译者注：如果采用pipeline管线搭建，`delaunay2d`只是filter层级的一种，还有其他选择，比如`delaunay3d`，它们的区别是，前者在“二维的平面最近”进行匹配的，而后者是“三维的空间最近”进行匹配。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:146
msgid "3D data"
msgstr "3D数据"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:150
msgid "|contour3d|"
msgstr "coutour3d方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:182
msgid "contour3d"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:150
msgid ""
":func:`contour3d` |hack| Plot iso-surfaces of volumetric data defined as a "
"3D array."
msgstr "`contour3d` 方法用于绘制3D体数据的等值面。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:155
msgid "|quiver3d|"
msgstr "quiver3d 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:185
msgid "quiver3d"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:155
msgid ""
":func:`quiver3d` |hack| Plot arrows to represent vectors at data points. The"
" ``x``, ``y``, ``z`` position are specified by numpy arrays, as well as the "
"``u``, ``v``, ``w`` components of the vectors."
msgstr ""
"quiver3d 方法将为数据绘制箭头。``x``, ``y``, ``z``为位置坐标，``u``, ``v``, ``w``为方向，均由numpy数组给定。\n"
"译者注：矢量可视化可采用quiver3d，需要传入6个参数，样式也可由参数传入，注意箭头大小和方向均由uvw控制。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:162
msgid "|flow|"
msgstr "flow 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:188
msgid "flow"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:162
msgid ""
":func:`flow` |hack| Plot a trajectory of particles along a vector field "
"described by three 3D arrays giving the ``u``, ``v``, ``w`` components on a "
"grid."
msgstr "flow方法用于绘制粒子的轨迹，它由三个3D数组给定。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:168
msgid "|slice|"
msgstr "slice 方法"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:191
msgid "slice"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:168
msgid ""
":func:`volume_slice` |hack| Plots an interactive image plane sliced through "
"volumetric data."
msgstr ""
"volume_slice 方法用于绘制一个可交互的平面，它可以对体数据进行切片。\n"
"译者注：volume_slice 更多是一种可视化的辅助手段，如医学影像，体数据核磁等的可视化，生成一个可灵活控制的组织切面方便观察。"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst-1
msgid "Structured or unstructured data"
msgstr "结构化与非结构化的数据"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:177
msgid ""
":func:`contour3d`, :func:`volume_slice` and :func:`flow` require ordered "
"data (to be able to interpolate between the points), whereas "
":func:`quiver3d` works with any set of points. The required structure is "
"detailed in the functions' documentation."
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:197
msgid ""
"Many richer visualizations can be created by assembling data sources filters"
" and modules. See the :ref:`controlling-the-pipeline-with-mlab-scripts` and "
"the :ref:`mlab-case-studies` sections."
msgstr ""
"如果要对可视化有更多要求，丰富其细节则需要自己配置pipeline管线：从data "
"sources数据源层级到filter滤波层级，再到module可视化模块层级进行逐层搭建。相关内容请参考下面的章节，`controlling-the-"
"pipeline-with-mlab-scripts`和`mlab-case-studies`。"
