# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Translators:
# Mayavii <1444742843@qq.com>, 2021
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.2.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-19 02:52+0000\n"
"PO-Revision-Date: 2019-04-27 07:31+0000\n"
"Last-Translator: Mayavii <1444742843@qq.com>, 2021\n"
"Language-Team: Chinese (China) (https://app.transifex.com/tkoyama010/teams/98399/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:3
msgid "Figures, legends, camera and decorations"
msgstr "图像，图例，相机设置及可视化修饰"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:6
msgid "Handling several figures"
msgstr "所有的mlab函数都在当前的scene层级运作，我们使用figure()，这与matlab和pyplot是一样的。"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:8
msgid ""
"All mlab functions operate on the current scene, that we also call "
":func:`figure`, for compatibility with matlab and pylab. The different "
"figures are indexed by key that can be an integer or a string. A call to the"
" :func:`figure` function giving a key will either return the corresponding "
"figure, if it exists, or create a new one. The current figure can be "
"retrieved with the :func:`gcf` function. It can be refreshed using the "
":func:`draw` function, saved to a picture file using :func:`savefig` and "
"cleared using :func:`clf`."
msgstr ""
"所有的mlab函数仅对当前的scene层级有效，因此我们使用figure()进行不同scene之间的切换，这与matlab和pyplot是一样的。如果我们要切换不同的图像，可以使用键值对进行索引，键接受整形integer和字符串string的类型。使用figure()匹配其键值对，它会返回相应的图像；如果键对应的scene层级不存在，它会创建一个。\n"
"使用gcf()方法可以恢复当前绘制的图像；\n"
"使用draw()方法可以对图像进行更新；\n"
"使用savefig()方法可以保存当前的图像。"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:19
msgid "Figure decorations"
msgstr "图像修饰函数"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:21
msgid ""
"Axes can be added around a visualization object with the :func:`axes` "
"function, and the labels can be set using the :func:`xlabel`, :func:`ylabel`"
" and :func:`zlabel` functions. Similarly, :func:`outline` creates an outline"
" around an object. :func:`title` adds a title to the figure."
msgstr ""
"使用axes函数可以为可视化对象添加坐标轴。\n"
"使用xlabel，ylabel，zxlabel函数可以为图像添加坐标轴标签。\n"
"相似的用法，outline函数可以为可视化图像创建外框。\n"
"title函数可以为图像添加标题。"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:26
msgid ""
"Color bars can be used to reflect the color maps used to display values "
"(LUT, or lookup tables, in VTK parlance). :func:`colorbar` creates a color "
"bar for the last object created, trying to guess whether to use the vector "
"data or the scalar data color maps. The :func:`scalarbar` and "
":func:`vectorbar` function scan be used to create color bars specifically "
"for scalar or vector data."
msgstr ""
"Color "
"bar颜色条（比色卡）是其数据的映射（其配色方案在LUT中设定），默认情况下`colorbar`函数创建的是最后一个数据的映射，如果数据是标量则创建为标量比色卡，矢量也是如此。也可以指定scalarbar和vectorbar创建相应的比色卡。"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:33
msgid ""
"A small *xyz* triad can be added to the figure using "
":func:`orientation_axes`."
msgstr "也可以使用orientation_axes同时添加三个坐标轴的标签。"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:36
msgid ""
"The :func:`orientation_axes` was named `orientationaxes` before release 3.2."
msgstr "在版本3.2之前，orientation_axes函数为orientationaxes"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:40
msgid "Moving the camera"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:42
msgid ""
"The position and direction of the camera can be set using the :func:`view` "
"function. They are described in terms of Euler angles and distance to a "
"focal point. The :func:`view` function tries to guess the right roll angle "
"of the camera for a pleasing view, but it sometimes fails. The :func:`roll` "
"explicitly sets the roll angle of the camera (this can be achieve "
"interactively in the scene by pressing down the control key, while dragging "
"the mouse, see :ref:`interaction-with-the-scene`)."
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:50
msgid ""
"The :func:`view` and :func:`roll` functions return the current values of the"
" different angles and distances they take as arguments. As a result, the "
"view point obtained interactively can be stored and reset using::"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst-1
msgid "Rotating the camera around itself"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:64
msgid ""
"You can also rotate the camera around itself using the `roll`, `yaw` and "
"`pitch` methods of the camera object. This moves the focal point::"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:71
msgid ""
"Unlike the :func:`view` and :func:`roll` function, the angles are "
"incremental, and not absolute."
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst-1
msgid "Modifying zoom and view angle"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:76
msgid ""
"The camera is entirely defined by its position, its focal point, and its "
"view angle (attributes 'position', 'focal_point', 'view_angle'). The camera "
"method 'zoom' changes the view angle incrementally by the specify ratio, "
"where as the method 'dolly' translates the camera along its axis while "
"keeping the focal point constant. The :func:`move` function can also be "
"useful in these regards."
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:83
msgid "Camera parallel scale"
msgstr ""

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:85
msgid ""
"In addition to the information returned and set by mlab.view and mlab.roll, "
"a last parameter is needed to fully define the view point: the parallel "
"scale of the camera, that control its view angle. It can be read (or set) "
"with the following code::"
msgstr ""
