# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.2.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-19 02:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../mayavi/docs/source/mayavi/overview.rst:4
msgid "An overview of Mayavi"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:-1
msgid "Section summary"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:8
msgid "This section gives a quick summary of what is Mayavi, and should help you understand where, in this manual, find relevant information to your use case."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:13
msgid "Introduction"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:15
msgid "Mayavi2 seeks to provide easy and interactive visualization of 3D data, or 3D plotting.  It does this by the following:"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:18
msgid "an (optional) rich user interface with dialogs to interact with all data and objects in the visualization."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:21
msgid "a simple and clean scripting interface in Python_, including ready to use 3D visualization functionality similar to matlab or `matplotlib`_ (using :ref:`mlab <simple-scripting-with-mlab>`), or an object-oriented programming interface."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:26
msgid "harnesses the power of VTK_ without forcing you to learn it."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:28
msgid "Additionally, Mayavi2 strives to be a reusable tool that can be embedded in your libraries and applications in different ways or be combined with the Envisage_ application-building framework to assemble domain-specific tools."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:39
msgid "What is Mayavi2?"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:41
msgid "Mayavi2 is a general purpose, cross-platform tool for 3-D scientific data visualization. Its features include:"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:44
msgid "Visualization of scalar, vector and tensor data in 2 and 3 dimensions."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:47
msgid "Easy scriptability using Python."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:49
msgid "Easy extendibility via custom sources, modules, and data filters."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:51
msgid "Reading several file formats: VTK_ (legacy and XML), PLOT3D, etc."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:54
msgid "Saving of visualizations."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:56
msgid "Saving rendered visualization in a variety of image formats."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:58
msgid "Convenient functionality for rapid scientific plotting via mlab (see :ref:`simple-scripting-with-mlab`)."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:61
msgid "Unlike its predecessor Mayavi1_, Mayavi2 has been designed with scriptability and extensibility in mind from the ground up.  Mayavi2 provides a ``mayavi2`` application which is usable by itself.  However, Mayavi2 may also be used as a plotting engine, in scripts, like with matplotlib or gnuplot, as well as a library for interactive visualizations in any other application.  It may also be used as an `Envisage`_ plug-in which allows it to be embedded in other `Envisage`_ based applications natively."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:74
msgid "Technical details"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:76
msgid "Mayavi2 provides a general purpose visualization engine based on pipeline architecture similar to that used in VTK.  Mayavi2 also provides an `Envisage`_ plug-in for 2D/3D scientific data visualization. Mayavi2 uses the Enthought Tool Suite (ETS_) in the form of Traits_, TVTK_ and Envisage_. Here are some of its features:"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:81
msgid "Pythonic API which takes full advantage of Traits_."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:83
msgid "Mayavi can work natively and transparently with numpy_ arrays (this is thanks to its use of TVTK_)."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:86
msgid "Easier to script than Mayavi-1 due to a much cleaner MVC_ design."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:88
msgid "Easy to extend with added sources, components, modules and data filters."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:91
msgid "Provides an `Envisage`_ plug-in. This implies that it is:"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:93
msgid "easy to use other Envisage plugins in Mayavi.  For example, Mayavi provides an embedded Python shell.  This is an Envisage plug-in and requires one line of code to include in Mayavi."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:98
msgid "easy to use Mayavi inside Envisage based applications. Thus, any envisage based application can readily use the mayavi plug-in and script it to visualize data."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:102
msgid "wxPython/Qt4 based GUI (thanks entirely to Traits, PyFace and Envisage).  It is important to note that there is no wxPython or Qt4 code used directly in the Mayavi source."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:106
msgid "A non-intrusive reusable design. It is possible to use Mayavi without a wxPython or Qt4 based UI."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:118
msgid "All the following sections assume you have a working Mayavi, for information on downloading and installing Mayavi, see the next section, :ref:`installation`."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:123
msgid "Using Mayavi as an application, or a library?"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:125
msgid "As a user there are three primary ways to use Mayavi:"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:127
msgid "Use the ``mayavi2`` application completely graphically.  More information on this is in the :ref:`using-the-mayavi-application` section."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:131
msgid "Use Mayavi as a plotting engine from simple Python scripts, for example from Ipython, in combination with numpy.  The ``mlab`` scripting API provides a simple way of using Mayavi in batch-processing scripts, see :ref:`simple-scripting-with-mlab` for more information on this."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:137
msgid "Script the Mayavi application from Python. The Mayavi application itself features a powerful and general purpose scripting API that can be used to adapt it to your needs."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:141
msgid "You can script Mayavi while using the ``mayavi2`` application in order to automate tasks and extend Mayavi's behavior."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:144
msgid "You can script Mayavi from your own Python based application."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:146
msgid "You can embed Mayavi into your application in a variety of ways either using Envisage_ or otherwise."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:149
msgid "More details on this are available in the :ref:`advanced-scripting-with-mayavi` chapter."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:155
msgid "Scenes, data sources, and visualization modules: the pipeline model"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:157
msgid "Mayavi uses pipeline architecture like VTK_.  As far as a user is concerned this basically boils down to a simple hierarchy."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:160
msgid "Data is loaded into Mayavi and stored in a **data source** (either using a file or created from a script). Any number of data files or data objects may be opened. Data sources are rich objects that describe the data, but not how to visualize it."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:165
msgid "This data is optionally processed using :ref:`filters` that operate on the data and visualized using visualization :ref:`modules`.  The filters and **modules** are accessible in the application via the `Visualize` menu on the UI or context menus on the pipeline. They may also be instantiated as Python objects when scripting Mayavi."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:171
msgid "The reasons for separation between `data source`, the data container, and the visualizations tools used to look at it, the `modules`, is that there are many different ways of looking at the same data. For instance the following images are all made by applying different `modules` to the same data source:"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:177
msgid "|volumetric_cut_plane| |volumetric_contour3d| |volumetric_volume_tweaked|"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:189
msgid "volumetric_cut_plane"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:185
msgid "volumetric_contour3d"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:187
msgid "volumetric_volume_tweaked"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:180
msgid "All objects belong to a `Scene` -- this is an area where the 3D visualization is performed.  In the interactive application, new scenes may be created by using the `File->New->VTK Scene` menu."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:194
msgid "Loading data into Mayavi"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:196
msgid "Mayavi is a scientific data visualizer. There are two primary ways to make your data available to it:"
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:199
msgid "Store your data in a supported file format like VTK legacy or VTK XML files etc. See `VTK file formats`_ for more information on the VTK formats. These files can be loaded in the interactive application using the menus."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:204
msgid "Generate a TVTK dataset via numpy_ arrays or any other sequence. This is easiest done by using the scripting APIs, for instance `mlab` (see the paragraph on :ref:`creating data sources with mlab <mlab_data_source>`, or simply the 3D plotting functions: :ref:`mlab_plotting_functions`)."
msgstr ""

#: ../../mayavi/docs/source/mayavi/overview.rst:210
msgid "Alternatively, if you wish to gain a deeper understanding by creating VTK data structures or files, more information on datasets in general is available in the :ref:`data-structures-used-by-mayavi` section."
msgstr ""
