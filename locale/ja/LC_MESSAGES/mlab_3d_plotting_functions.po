# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.4.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-13 00:39+0000\n"
"PO-Revision-Date: 2019-04-27 07:31+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/98399/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:4
msgid "3D Plotting functions for numpy arrays"
msgstr "numpy arrayの3Dプロット関数"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:6
msgid ""
"Visualization can be created in `mlab` by a set of functions operating on "
"numpy arrays."
msgstr "numpy配列上で動作する関数のセットによって， `mlab` 内に視覚化を作成することができます．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:9
msgid ""
"The mlab plotting functions take numpy arrays as input, describing the "
"``x``, ``y``, and ``z`` coordinates of the data. They build full-blown "
"visualizations: they create the data source, filters if necessary, and add "
"the visualization modules. Their behavior, and thus the visualization "
"created, can be fine-tuned through keyword arguments, similarly to pylab. In"
" addition, they all return the visualization module created, thus "
"visualization can also be modified by changing the attributes of this "
"module."
msgstr ""
"mlabプロット関数は，データの  ``x``, ``y``,  ``z`` "
"座標を記述するために，多数の配列を入力として受け取ります．データソースの作成，必要に応じたフィルタリング，ビジュアライゼーションモジュールの追加など，本格的なビジュアライゼーションを構築します．これらの関数の振る舞い，そしてその結果作成される視覚化は，pylabと同様に，キーワード引数によって微調整することができます．さらに，これらはすべて，作成されたビジュアル化モジュールを返すため，このモジュールの属性を変更することによってビジュアル化を変更することもできます．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:20
msgid ""
"In this section, we only list the different functions. Each function is "
"described in detail in the :ref:`mlab-reference`, at the end of the user "
"guide, with figures and examples. Please follow the links."
msgstr ""
"このセクションでは，異なる関数のみをリストします．各関数の詳細については，ユーザガイドの最後にある :ref:`mlab-reference` "
"を参照してください．リンクをたどってください．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:26
msgid "0D and 1D data"
msgstr "0D/1Dデータ"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:35
msgid "|points3d|"
msgstr "|points3d|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:51
msgid "points3d"
msgstr "points3d"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:35
msgid ""
":func:`points3d` |hack| Plots glyphs (like points) at the position of the "
"supplied data, described by ``x``, ``y``, ``z`` numpy arrays of the same "
"shape."
msgstr ""
":func:`points3d` |hack| 与えられたデータの位置にグリフ(同点)をプロットします．グリフは ``x``, ``y``, ``z``"
" で記述された同じ形のnumpy配列です．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:29
msgid "<br>"
msgstr "<br>"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:41
msgid "|plot3d|"
msgstr "|plot3d|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:48
msgid "plot3d"
msgstr "plot3d"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:41
msgid ""
":func:`plot3d` |hack| Plots line between the supplied data, described by "
"``x``, ``y``, ``z`` 1D numpy arrays of the same length."
msgstr ""
":func:`plot3d` |hack| 与えられたデータの間に線を引いて， ``x``, ``y``, ``z`` と同じ長さの1D "
"numpy配列で記述します．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:55
msgid "2D data"
msgstr "2Dデータ"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:59
msgid "|imshow|"
msgstr "|imshow|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:127
msgid "imshow"
msgstr "imshow"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:59
msgid ":func:`imshow` |hack| View a 2D array as an image."
msgstr ":func:`imshow` |hack| 2D配列をイメージとして表示します．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:63
msgid "|surf|"
msgstr "|surf|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:136
msgid "surf"
msgstr "surf"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:63
msgid ""
":func:`surf` |hack| View a 2D array as a carpet plot, with the z axis "
"representation through elevation the value of the array points."
msgstr ":func:`surf` |hack| 2D配列をカーペットプロットとして表示し，配列ポイントの値をz軸で表します．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:69
msgid "|contour_surf|"
msgstr "|contour_surf|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:130
msgid "contour_surf"
msgstr "contour_surf"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:69
msgid ""
":func:`contour_surf` |hack| View a 2D array as line contours, elevated "
"according to the value of the array points."
msgstr ":func:`contour_surf` |hack| 2D配列を線の輪郭として表示し，配列の点の値に応じて高くします．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:74
msgid "|mesh|"
msgstr "|mesh|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:139
msgid "mesh"
msgstr "mesh"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:74
msgid ""
":func:`mesh` |hack| Plot a surface described by three 2D arrays, ``x``, "
"``y``, ``z`` giving the coordinates of the data points as a grid. |hack| "
"Unlike :func:`surf`, the surface is defined by its ``x``, ``y`` and ``z`` "
"coordinates with no privileged direction. More complex surfaces can be "
"created."
msgstr ""
":func:`mesh` |hack| 3つの2D配列, ``x``, ``y``, ``z`` "
"で表されるサーフェスをプロットし，データポイントの座標をグリッドとして与えます． |hack|  :func:`surf`,  とは異なり，サーフェスは"
" ``x``, ``y``, ``z`` 座標で定義され，特別な方向性はありません．より複雑なサーフェスを作成できます．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:84
msgid "|barchart|"
msgstr "|barchart|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:142
msgid "barchart"
msgstr "barchart"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:84
msgid ""
":func:`barchart` |hack| Plot an array ``s``, or a set of points with "
"explicit coordinates arrays, ``x``, ``y`` and ``z``, as a bar chart, eg for "
"histograms. |hack| This function is very versatile and will accept 2D or 3D "
"arrays, but also clouds of points, to position the bars."
msgstr ""
":func:`barchart` |hack| "
"配列``s`,または明示的な座標配列``x',``y''と``z''を持つ点の集合を棒グラフとしてプロットします．|hack|この関数は非常に汎用性が高く，2Dまたは3D配列だけでなく，点群を使用してバーを配置することもできます．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:94
msgid "|triangular_mesh|"
msgstr "|triangular_mesh|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:133
msgid "triangular_mesh"
msgstr "triangular_mesh"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:94
msgid ""
":func:`triangular_mesh` |hack| Plot a triangular mesh, fully specified by "
"``x``, ``y`` and ``z`` coordinates of its vertices, and the (n, 3) array of "
"the indices of the triangles."
msgstr ""
":func:`triangular_mesh` |hack| 三角形メッシュをプロットします．このメッシュは，頂点の ``x``, ``y``, "
"``z`` 座標，および三角形のインデックスの (n, 3) 配列で完全に指定されます．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst-1
msgid "Vertical scale of  :func:`surf` and :func:`contour_surf`"
msgstr ":func:`surf` と :func:`contour_surf` の鉛直スケール"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:105
msgid ""
":func:`surf` and :func:`contour_surf` can be used as 3D representation of 2D"
" data. By default the z-axis is supposed to be in the same units as the x "
"and y axis, but it can be auto-scaled to give a 2/3 aspect ratio. This "
"behavior can be controlled by specifying the \"warp_scale='auto'\"."
msgstr ""
":func:`surf` および :func:`contour_surf` "
"は，2Dデータの3D表現として使用できます．既定では，Z軸はX軸およびY軸と同じ単位であることが想定されていますが，2/3のアスペクト比になるように自動スケールすることもできます．この動作は，"
" \"warp_scale='auto'\" を指定することで制御できます．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst-1
msgid "From data points to surfaces."
msgstr "データポイントからサーフェスへ．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:113
msgid ""
"Knowing the positions of data points is not enough to define a surface, "
"connectivity information is also required. With the functions :func:`surf` "
"and :func:`mesh`, this connectivity information is implicitly extracted from"
" the shape of the input arrays: neighboring data points in the 2D input "
"arrays are connected, and the data lies on a grid. With the function "
":func:`triangular_mesh`, connectivity is explicitly specified. Quite often, "
"the connectivity is not regular, but is not known in advance either. The "
"data points lie on a surface, and we want to plot the surface implicitly "
"defined. The `delaunay2d` filter does the required nearest-neighbor "
"matching, and interpolation, as shown in the "
"(:ref:`example_surface_from_irregular_data`)."
msgstr ""
"データ点の位置を知るだけではサーフェスを定義することはできません．接続情報も必要です． :func:`surf` および :func:`mesh` "
"関数を使用すると，この接続情報は入力配列の形状から暗黙的に抽出されます．つまり，2D入力配列内の隣接するデータポイントが接続され，データはグリッド上にあります．"
" :func:`triangular_mesh` "
"関数を使用すると，接続性が明示的に指定されます．接続性が定期的でないことはよくありますが，事前にもわかりません．データ点はサーフェス上にあり，暗黙的に定義されたサーフェスをプロットします．("
" :ref:`example_surface_from_irregular_data` "
")に示されているように，`delaunay2d`フィルタは，必要な最近接マッチングと補間を行います．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:146
msgid "3D data"
msgstr "3Dデータ"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:150
msgid "|contour3d|"
msgstr "|contour3d|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:182
msgid "contour3d"
msgstr "contour3d"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:150
msgid ""
":func:`contour3d` |hack| Plot iso-surfaces of volumetric data defined as a "
"3D array."
msgstr ":func:`contour3d` |hack| 3D配列として定義されたボリュームデータの等値面をプロットします．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:155
msgid "|quiver3d|"
msgstr "|quiver3d|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:185
msgid "quiver3d"
msgstr "quiver3d"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:155
msgid ""
":func:`quiver3d` |hack| Plot arrows to represent vectors at data points. The"
" ``x``, ``y``, ``z`` position are specified by numpy arrays, as well as the "
"``u``, ``v``, ``w`` components of the vectors."
msgstr ""
":func:`quiver3d` |hack| データポイントのベクトルを表す矢印をプロットします． ``x``, ``y``, ``z`` "
"の位置は，ベクトルの ``u``, ``v``, ``w`` 成分と同様に，多数の配列によって指定される．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:162
msgid "|flow|"
msgstr "|flow|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:188
msgid "flow"
msgstr "flow"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:162
msgid ""
":func:`flow` |hack| Plot a trajectory of particles along a vector field "
"described by three 3D arrays giving the ``u``, ``v``, ``w`` components on a "
"grid."
msgstr ""
":func:`flow` |hack| 3つの3D配列で記述されたベクトルフィールドに沿って粒子の軌跡をプロットし，グリッド上にe ``u``, "
"``v``, ``w`` 成分を与える．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:168
msgid "|slice|"
msgstr "|slice|"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:191
msgid "slice"
msgstr "slice"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:168
msgid ""
":func:`volume_slice` |hack| Plots an interactive image plane sliced through "
"volumetric data."
msgstr ":func:`volume_slice` |hack| ボリュームデータをスライスしたインタラクティブなイメージプレーンをプロットします．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst-1
msgid "Structured or unstructured data"
msgstr "構造化データまたは非構造化データ"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:177
msgid ""
":func:`contour3d`, :func:`volume_slice` and :func:`flow` require ordered "
"data (to be able to interpolate between the points), whereas "
":func:`quiver3d` works with any set of points. The required structure is "
"detailed in the functions' documentation."
msgstr ""
":func:`contour3d`, :func:`volume_slice` と :func:`flow` "
"は順序付けされたデータ(点と点の間を補間することができます)を必要としますが， :func:`quiver3d` "
"は任意の点のセットで動作します．必要な構造体の詳細については，関数のドキュメントを参照してください．"

#: ../../mayavi/docs/source/mayavi/mlab_3d_plotting_functions.rst:197
msgid ""
"Many richer visualizations can be created by assembling data sources filters"
" and modules. See the :ref:`controlling-the-pipeline-with-mlab-scripts` and "
"the :ref:`mlab-case-studies` sections."
msgstr ""
"データソースのフィルタとモジュールを組み合わせることで，より高度な視覚化を実現できます． :ref:`controlling-the-pipeline-"
"with-mlab-scripts` および :ref:`mlab-case-studies` のセクションを参照してください．"
