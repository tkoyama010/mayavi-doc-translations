# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.4.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-22 00:38+0000\n"
"PO-Revision-Date: 2019-04-27 07:28+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/98399/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:3
msgid "Visualizing rich datasets: the ``fire_ug.vtu`` example"
msgstr "豊富なデータセットの視覚化: ``fire_ug.vtu`` の例"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:5
msgid ""
"Like ``heart.vtk``, the ``fire_ug.vtu`` example dataset is available in the "
"``examples/data`` directory.  This dataset is an unstructured grid stored in"
" a VTK XML file.  It represents a room with a fire in one corner.  A "
"simulation of the fluid flow generated by this fire was performed and the "
"resulting data at a particular instant of time is stored in the file.  The "
"dataset was provided by Dr. Philip Rubini, who at the time was at Cranfield "
"University.  A VRML file (``room_vis.wrl``) is also provided to show the "
"context of the room in which the fire is taking place."
msgstr ""
"``heart.vtk`` や ``fire_ug.vtu`` のように．データセットの例は ``examples/data`` "
"ディレクトリにあります．このデータセットは，VTK "
"XMLファイルに保存された非構造化グリッドです．片隅に火がある部屋を表しています．この火災によって生成された流体流のシミュレーションが実行され，特定の時点での結果データがファイルに保存されます．データは当時クランフィールド大学にいたDr."
" Philip Rubini によって提供されました．火災が発生している部屋のコンテキストを示すために，VRMLファイル "
"(``room_vis.wrl``) も用意されています．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:15
msgid ""
"With mayavi2 started, select `File->Load data->Open file` to load the data."
"  Again, you will see a node on the tree view on the left but nothing on the"
" TVTK scene.  This dataset contains different scalars and vectors in the "
"same data file.  If you select the `VTK XML file ...` node on the left the "
"reader may be configured in the object editor pane of the UI.  On this,  you"
" will see a drop list of all the scalars, vectors etc. in this data file.  "
"Select any that you wish to view."
msgstr ""
"mayavi2を起動した状態で，  `File->Load data->Open file` "
"を選択してデータをロードします．ここでも，ツリービューの左側にノードが表示されますが，TVTKシーンには何も表示されません．このデータセットには，同じデータファイルに異なるスカラーとベクトルが含まれています．`VTK"
" XMLファイル... により，このデータ・ファイル内のすべてのスカラーやベクトルなどのドロップ・リストが表示されます．表示するものを選択します．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:24
msgid ""
"Create an outline of the data as described earlier using an `Outline` "
"module.  View an iso-surface of the data by creating an `IsoSurface` module."
"  Also experiment with the `ScalarCutPlane` module."
msgstr ""
"`Outline`  モジュールを使用して，前述のようにデータのアウトラインを作成します． `IsoSurface` "
"モジュールを作成して，データの等値面を表示します． `ScalarCutPlane` モジュールも試してみてください．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:29
msgid ""
"Show the scalar bar that represents the color mapping (via a Look up table "
"that maps scalar values to colors) by clicking on the `Colors and legends` "
"node and enabling the `Show scalar bar`. Experiment with the different color"
" maps provided by default."
msgstr ""
"カラーマッピングを表すスカラーバー(スカラー値をカラーにマップするルックアップ・テーブルを使用)を表示するには， `Colors and "
"legends` ノードをクリックして `Show scalar bar` "
"を有効にします．デフォルトで提供されているさまざまなカラーマップを試してみてください．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:34
msgid ""
"Now click on the `VTK XML file ...` and select different scalar values to "
"see how the data has changed.  Your legend should automatically update when "
"the scalar value is changed."
msgstr ""
"ここで `VTK XML file ...` "
"と入力し，別のスカラー値を選択して，データがどのように変更されたかを確認します．スカラー値が変更されると，凡例が自動的に更新されます．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:38
msgid ""
"This data also features vectors.  The scalar data has `u`, `v` and `w` but "
"not the magnitude of the velocity.  Let's say we'd like to be able to view "
"iso-contours of the magnitude of the velocity.  To do this let's use the "
"`ExtractVectorNorm` filter. This is created by choosing the "
"`Visualize->Filters->Extract Vector Norm` menu."
msgstr ""
"このデータにはベクトルも含まれます．スカラーデータには `u` ， `v` ， `w` "
"がありますが，速度の大きさはありません．速度の大きさの等等高線を表示できるようにしたいとします．これを行うには，  "
"`ExtractVectorNorm` フィルタを使用します．これを作成するには， `Visualize->Filters->Extract "
"Vector Norm` メニューを選択します．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:45
msgid ""
"If you now create a `ScalarCutPlane`, you will see a new `Colors and "
"legends` node under the `ExtractVectorNorm` node.  This scalar cut plane is "
"displaying colors for the velocity magnitude that the filter has created.  "
"You can drag the iso-surface module from the other `Colors and legends` node"
" and drop it on this `Colors and legends` node so that the IsoSurface "
"generated is for the velocity magnitude and not for the scalars chosen in "
"the data."
msgstr ""
"ここで `ScalarCutPlane` を作成すると， `ExtractVectorNorm` ノードの下に新しい `Colors and "
"legends` "
"ノードが表示されます．このスカラー切断面には，フィルタによって作成された速度の大きさの色が表示されます．アイソサーフェイスモジュールを他の "
"`Colors and legends` ノードからドラッグし，この `Colors and legends` "
"ノードにドロップすると，生成されるIsoSurfaceは，データで選択されたスカラーに対するものではなく，速度の大きさに対するものになります．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:53
msgid ""
"Note that the view on the left represents a pipeline of the flow of the data"
" from `source -> filter -> modules`. Essentially the data flows from the "
"parent node down to the children nodes below it."
msgstr ""
"左側のビューは， `source -> filter -> modules` "
"からのデータフローのパイプラインを表していることに注意してください．基本的に，データは親ノードからその下の子ノードに流れます．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:58
msgid ""
"Now if you want to visualize something on a different \"branch\" of the "
"pipeline, let's say you want to view iso-surfaces of the temperature data "
"you must first click on the modules or the source object (the `VTK XML File "
"...` node) itself and then select the menu item.  When you select an item on"
" the tree, it makes that item the *current object* and menu selections made "
"after that will in general create new modules/filters below the current "
"object."
msgstr ""
"ここで，パイプラインの別の \"branch\" にあるものを表示する場合，温度データの等値面を表示するには，最初にモジュールまたはソースオブジェクト("
" `VTK XML File ...` ノード)自体をクリックしてから，メニュー項目を選択する必要があります．ツリー上の項目を選択すると，その項目が "
"*現在のオブジェクト* になり，その後のメニュー選択によって，現在のオブジェクトの下に新しいモジュール/フィルタが作成されます．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:67
msgid ""
"You can filter \"filtered data\".  So select the `ExtractVectorNorm` node to"
" make it the active object.  Now create a Threshold filter by selecting "
"`Visualize->Filters->Threshold`.  Now set the upper and lower thresholds on "
"the object editor for the Threshold to something like 0.5 and 3.0.  If you "
"create a `VectorCutPlane` module at this point and move the cut plane you "
"should see arrows but only arrows that are between the threshold values you "
"have selected. Thus, you can create pretty complicated visualization "
"pipelines using this approach."
msgstr ""
"\"filtered data\" をフィルタできます． `ExtractVectorNorm` "
"ノードを選択してアクティブオブジェクトにします．ここで， `Visualize->Filters->Threshold` "
"を選択してしきい値フィルタを作成します．オブジェクトエディタで，しきい値の上限と下限のしきい値を0.5と3.0のように設定します．この時点で "
"`VectorCutPlane` "
"モジュールを作成して切断面を移動すると，矢印は表示されますが，選択したしきい値の間にある矢印だけが表示されます．したがって，このアプローチを使用して非常に複雑な視覚化パイプラインを作成できます．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:78
msgid ""
"There are several vector modules.  `VectorCutPlane`, `Vectors`, "
"`WarpVectorCutPlane` and `Streamlines`.  If you view streamlines then mayavi"
" will generate streamlines of vector data in your dataset.  To view "
"streamlines of the original dataset you can click on the original `Outline` "
"module (or the source) and then choose the `Streamline` menu item.  The "
"streamline lets you move different type of seeds on screen using 3D widgets."
"  Seed points originating from these positions are used to trace out the "
"streamlines.  Sphere, line and plane sources may be used here to initialize "
"the streamline seeds."
msgstr ""
"いくつかのベクターモジュールがある． `VectorCutPlane` ， `Vectors` ， `WarpVectorCutPlane` ， "
"`Streamlines` "
"です．ストリームラインを表示すると，データセットにベクトルデータのストリームラインが生成されます．元のデータセットのストリームラインを表示するには，元のモジュールをクリックし，メニュー項目の(またはソース)を選択します．ストリームラインを使用すると，3Dウィジェットを使用して画面上で異なるタイプのシードを移動できます．これらの位置から発生するシードポイントを使用して，流線をトレースします．ここでは，流線シードを初期化するために球，線，および平面ソースを使用できます．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:89
msgid ""
"You can view the room in which the fire is taking place by opening the VRML "
"file by the `File->Open->VRML2 file` menu item and selecting the "
"``room_vis.wrl`` file included with the data."
msgstr ""
"火災が発生している部屋を確認するには，VRMLファイルを開いて，  `File->Open->VRML2 file` メニュー項目を選択し，データのある"
" ``room_vis.wrl`` を選択します．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:93
msgid ""
"Once you setup a complex visualization pipeline and want to save it for "
"later experimentation you may save the entire visualization via the "
"`File->Save Visualization` menu.  A saved file can be loaded later using the"
" `File->Load Visualization` menu item.  This option is not 100% robust and "
"is still experimental.  Future versions will improve this feature. However, "
"it does work and can be used for the time being."
msgstr ""
"複雑なビジュアル化パイプラインを設定し，後で実験するために保存したい場合は， `File->Save Visualization` "
"メニューでビジュアル化全体を保存できます．保存したファイルは，後から `File->Load Visualization` "
"メニュー項目を使ってロードできます．このオプションは100%堅牢ではなく，まだ実験段階です．今後のバージョンでは，この機能が改善される予定です．しかし，この機能はしばらく使用することができます．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:101
msgid ""
"Once again, the visualization in this case was created by using the user "
"interface.  It is possible to script this entirely using Python scripts.  A "
"simple script demonstrating several of the above modules is available in "
"``examples/streamline.py``.  This file may be studied. It can be run either "
"likes so::"
msgstr ""
"ここでも，この場合のビジュアリゼーションは，ユーザインタフェースを使用して作成されています．これは，Pythonスクリプトを使用して完全にスクリプト化できます．上記のモジュールのいくつかを示す簡単なスクリプトが"
" ``examples/streamline.py`` にあります．このファイルは調べられるかもしれません．次のように実行できます．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:110
msgid "or so::"
msgstr "次のようになります．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:114
msgid ""
"As can be seen from the example, it is quite easy to script mayavi to "
"visualize data.  An image of a resulting visualization generated from this "
"script is shown below."
msgstr ""
"例からわかるように，mayaviをスクリプト化してデータを視覚化するのは非常に簡単です．このスクリプトから生成されたビジュアライゼーションのイメージを次に示します．"

#: ../../mayavi/docs/source/mayavi/example_fire.rst:118
msgid "Sample visualization of the ``fire_ug.vtu`` dataset."
msgstr "``fire_ug.vtu`` データセットの可視化のサンプル"
