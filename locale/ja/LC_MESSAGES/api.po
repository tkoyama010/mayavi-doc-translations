# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.4.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-24 00:37+0000\n"
"PO-Revision-Date: 2019-04-27 07:29+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2024\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/98399/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../mayavi/docs/source/mayavi/api/core_view_objects.rst:3
msgid "Main view and UI objects"
msgstr "メインビューとUIオブジェクト"

#: ../../mayavi/docs/source/mayavi/api/core_view_objects.rst:5
msgid ""
"This is an API reference of the views for the main objects. The section "
":ref:`builing_applications` gives some context on how to use them."
msgstr ""
"これは，メインオブジェクトのビューのAPIリファレンスです． :ref:`builing_applications` "
"の章は，それらの使い方についていくつかの文脈を与えます．"

#: ../../mayavi/docs/source/mayavi/api/core_view_objects.rst:12
msgid "Scene UIs: :class:`DecoratedScene` and :class:`MayaviScene`"
msgstr "Scene UIs: :class:`DecoratedScene` と :class:`MayaviScene`"

#: ../../mayavi/mayavi/core/ui/mayavi_scene.pydocstring of
#: mayavi.core.ui.mayavi_scene.MayaviScene:1
msgid ""
"Bases: "
":py:class:`~pyface.base_toolkit.Toolkit.__call__.<locals>.Unimplemented`"
msgstr ""
"ベースクラス: "
":py:class:`~pyface.base_toolkit.Toolkit.__call__.<locals>.Unimplemented`"

#: ../../mayavi/mayavi/core/ui/mayavi_scene.pydocstring of
#: mayavi.core.ui.mayavi_scene.MayaviScene:1
msgid "A scene UI, similar to a decorated scene, but with more buttons."
msgstr "装飾されたシーンに似ていますが，ボタンが多くなっています．"

#: ../../mayavi/mayavi/core/ui/mayavi_scene.pydocstring of
#: mayavi.core.ui.mayavi_scene.MayaviScene.show_engine:1
msgid "Open the engine view corresponding to the engine of the scene."
msgstr "シーンのエンジンに対応するエンジンビューを開きます．"

#: ../../mayavi/docs/source/mayavi/api/core_view_objects.rst:24
msgid ":class:`SceneEditor`"
msgstr ":class:`SceneEditor`"

#: ../../mayavi/docs/source/mayavi/api/core_view_objects.rst:30
msgid ":class:`MlabSceneModel`"
msgstr ":class:`MlabSceneModel`"

#: ../../mayavi/mayavi/tools/mlab_scene_model.pydocstring of
#: mayavi.tools.mlab_scene_model.MlabSceneModel:1
msgid "Bases: :py:class:`~tvtk.pyface.scene_model.SceneModel`"
msgstr "ベースクラス: :py:class:`~tvtk.pyface.scene_model.SceneModel`"

#: ../../mayavi/mayavi/tools/mlab_scene_model.pydocstring of
#: mayavi.tools.mlab_scene_model.MlabSceneModel:1
msgid ""
"An container for an mlab model, that can be exposed using a Mayavi scene in "
"a TraitsUI view."
msgstr "mlabモデルのコンテナで，TraitsUIビューでMayaviシーンを使用して表示できます．"

#: ../../mayavi/docs/source/mayavi/api/core_view_objects.rst:36
msgid ":class:`EngineView` and  :class:`EngineRichView`"
msgstr ":class:`EngineView` および :class:`EngineRichView`"

#: ../../mayavi/docs/source/mayavi/api/core_view_objects.rst:38
msgid "These are two objects to be used as views for an engine::"
msgstr "エンジンのビューとして使用されるオブジェクトは次の2つです．"

#: ../../mayavi/mayavi/core/ui/engine_view.pydocstring of
#: mayavi.core.ui.engine_view.EngineView:1
msgid "Bases: :py:class:`~traits.has_traits.HasTraits`"
msgstr "ベースクラス: :py:class:`~traits.has_traits.HasTraits`"

#: ../../mayavi/mayavi/core/ui/engine_view.pydocstring of
#: mayavi.core.ui.engine_view.EngineView:1
msgid "A view displaying the engine's object tree."
msgstr "エンジンのオブジェクトツリーを表示するビュー．"

#: ../../mayavi/mayavi/core/ui/engine_rich_view.pydocstring of
#: mayavi.core.ui.engine_rich_view.EngineRichView.default_traits_view:1
#: ../../mayavi/mayavi/core/ui/engine_view.pydocstring of
#: mayavi.core.ui.engine_view.EngineView.default_traits_view:1
msgid "The default traits view of the Engine View."
msgstr "エンジンビューのデフォルトの特性ビューです．"

#: ../../mayavi/mayavi/core/ui/engine_rich_view.pydocstring of
#: mayavi.core.ui.engine_rich_view.EngineRichView:1
msgid "Bases: :py:class:`~mayavi.core.ui.engine_view.EngineView`"
msgstr "ベースクラス: :py:class:`~mayavi.core.ui.engine_view.EngineView`"

#: ../../mayavi/mayavi/core/ui/engine_rich_view.pydocstring of
#: mayavi.core.ui.engine_rich_view.EngineRichView:1
msgid ""
"A view displaying the engine's object tree, alongside with a panel to edit "
"the objects."
msgstr "エンジンのオブジェクトツリーと，オブジェクトを編集するためのパネルを表示するビュー．"

#: ../../mayavi/docs/source/mayavi/api/index.rst:3
msgid "Mayavi API reference"
msgstr "Mayavi APIリファレンス"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:3
msgid "Pipeline base objects"
msgstr "Pipelineベースオブジェクト"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:5
msgid ""
"This is an API reference of the base classes of the pipeline objects. Please"
" refer to section :ref:`advanced-use-of-mayavi` for instructions on how to "
"use them."
msgstr ""
"これは，パイプラインオブジェクトの基本クラスのAPIリファレンスです．使用方法は :ref:`advanced-use-of-mayavi` "
"を参照してください．"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:12
msgid ":class:`Scene`"
msgstr ":class:`Scene`"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager:1
#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase:1
#: ../../mayavi/mayavi/core/scene.pydocstring of mayavi.core.scene.Scene:1
msgid "Bases: :py:class:`~mayavi.core.base.Base`"
msgstr "ベースクラス: :py:class:`~mayavi.core.base.Base`"

#: ../../mayavi/mayavi/core/scene.pydocstring of mayavi.core.scene.Scene:1
msgid "The Mayavi scene class."
msgstr "Mayavi scene クラス"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.add_child:1
#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.add_child:1
#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.add_child:1
#: ../../mayavi/mayavi/core/source.pydocstring of
#: mayavi.core.source.Source.add_child:1
msgid ""
"This method intelligently adds a child to this object in the MayaVi "
"pipeline."
msgstr "このメソッドはMayaViパイプラインのこのオブジェクトに子をインテリジェントに追加します．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:1
msgid "Add a picking callback on mouse click."
msgstr "マウスクリックで選択コールバックを追加します．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:3
msgid ""
"When the mouse button is press, object picking is called, and the given "
"callback is invoked with the resulting pick as an argument."
msgstr "マウスボタンを押すと，オブジェクトの選択が呼び出され，結果の選択を引数として指定されたコールバックが呼び出されます．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:7
msgid "**Keyword arguments**"
msgstr "**キーワード引数**"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:0
msgid "type"
msgstr "type"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:9
msgid "'point', 'cell', or 'world' The picker type used for picking."
msgstr "'point', 'cell', または 'world' ．ピッキングに使用するピッカーの型．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:0
msgid "button"
msgstr "button"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:11
msgid ""
"'Left', 'Middle', or 'Right' The mouse button triggering the picking event."
msgstr "'Left' ， 'Middle' または 'Right' ．選択イベントをトリガするマウスボタン．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:0
msgid "remove"
msgstr "remove"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:13
msgid ""
"boolean If remove is True, the callback is removed from the list of "
"callbacks."
msgstr "boolean removeがTrueの場合，コールバックのリストからコールバックが削除されます．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:17
msgid "**Returns** picker: a tvtk picker"
msgstr "**Returns** ピッカー: tvtk picker"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:19
msgid "The picker that will be used to do the picking."
msgstr "ピッキングに使用するピッカー．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:21
msgid "**Notes**"
msgstr "**注記**"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:23
msgid "The callback must accept one argument: the TVTK picker."
msgstr "コールバックは，TVTKピッカーという引数を1つ受け入れる必要があります．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.on_mouse_pick:25
msgid "The same callback can be added multiple times."
msgstr "同じコールバックを複数回追加できます．"

#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.remove:1
msgid "Remove ourselves from the mayavi pipeline."
msgstr "mayaviパイプラインから自分自身を削除します．"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.remove_child:1
#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.remove_child:1
#: ../../mayavi/mayavi/core/source.pydocstring of
#: mayavi.core.source.Source.remove_child:1
msgid "Remove specified child from our children."
msgstr "指定した子を子から除去します．"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.start:1
#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.start:1 ../../mayavi/mayavi/core/source.pydocstring
#: of mayavi.core.source.Source.start:1
msgid "This is invoked when this object is added to the mayavi pipeline."
msgstr "これは，このオブジェクトがmayaviパイプラインに追加されたときに呼び出されます．"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.stop:1
#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.stop:1
#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.stop:1
#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.stop:1 ../../mayavi/mayavi/core/source.pydocstring
#: of mayavi.core.source.Source.stop:1
msgid "Invoked when this object is removed from the mayavi pipeline."
msgstr "このオブジェクトがmayaviパイプラインから削除されると呼び出されます．"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.tno_can_add:1
#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.tno_can_add:1
#: ../../mayavi/mayavi/core/source.pydocstring of
#: mayavi.core.source.Source.tno_can_add:1
msgid "Returns whether a given object is droppable on the node."
msgstr "指定されたオブジェクトがノード上でドロップ可能かどうかを返します．"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.tno_drop_object:1
#: ../../mayavi/mayavi/core/scene.pydocstring of
#: mayavi.core.scene.Scene.tno_drop_object:1
#: ../../mayavi/mayavi/core/source.pydocstring of
#: mayavi.core.source.Source.tno_drop_object:1
msgid "Returns a droppable version of a specified object."
msgstr "指定したオブジェクトのドロップ可能なバージョンを返します．"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:18
msgid ":class:`Source`"
msgstr ":class:`Source`"

#: ../../mayavi/mayavi/core/module.pydocstring of mayavi.core.module.Module:1
#: ../../mayavi/mayavi/core/source.pydocstring of mayavi.core.source.Source:1
msgid "Bases: :py:class:`~mayavi.core.pipeline_base.PipelineBase`"
msgstr "ベースクラス: :py:class:`~mayavi.core.pipeline_base.PipelineBase`"

#: ../../mayavi/mayavi/core/source.pydocstring of mayavi.core.source.Source:1
msgid "Base class for the sources objects in the pipeline."
msgstr "パイプライン内のソースオブジェクトの基本クラス．"

#: ../../mayavi/mayavi/core/source.pydocstring of
#: mayavi.core.source.Source.add_module:1
msgid ""
"Adds a module smartly.  If no ModuleManager instances are children, it first"
" creates a new ModuleManager and then adds the module to it.  If not it adds"
" the module to the first available ModuleManager instance."
msgstr ""
"モジュールをスマートに追加します．ModuleManagerインスタンスが子でない場合は，まず新しいModuleManagerを作成してから，モジュールを追加します．そうでない場合は，モジュールを最初に使用可能なModuleManagerインスタンスに追加します．"

#: ../../mayavi/mayavi/core/source.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Save our output (by default the first of our outputs) to the specified "
"filename as a VTK file.  Both old style and new style XML files are "
"supported."
msgstr ""
"出力(デフォルトでは最初の出力)を，指定したファイル名でVTKファイルとして保存します．古いスタイルのXMLファイルと新しいスタイルのXMLファイルの両方がサポートされています．"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:24
msgid ":class:`Filter`"
msgstr ":class:`Filter`"

#: ../../mayavi/mayavi/core/filter.pydocstring of mayavi.core.filter.Filter:1
msgid "Bases: :py:class:`~mayavi.core.source.Source`"
msgstr "ベースクラス: :py:class:`~mayavi.core.source.Source`"

#: ../../mayavi/mayavi/core/filter.pydocstring of mayavi.core.filter.Filter:1
msgid "Base class for all the Mayavi filters."
msgstr "すべてのMayaviフィルタの基本クラスです．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.setup_pipeline:1
msgid "Override this method so that it *creates* its tvtk pipeline."
msgstr "このメソッドをオーバーライドして，tvtkパイプラインを *作成* します．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.setup_pipeline:4
msgid ""
"This method is invoked when the object is initialized via `__init__`.  Note "
"that at the time this method is called, the tvtk data pipeline will *not* "
"yet be setup.  So upstream data will not be available.  The idea is that you"
" simply create the basic objects and setup those parts of the pipeline not "
"dependent on upstream sources and filters."
msgstr ""
"このメソッドは， `__init__` "
"を介してオブジェクトが初期化されたときに呼び出されます．このメソッドが呼び出された時点では，tvtkデータパイプラインはまだ設定されていないことに注意してください．したがって，アップストリームデータは使用できません．基本的なオブジェクトを作成し，上流のソースおよびフィルタに依存"
" *しない* パイプラインのこれらの部分を設定するだけです．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.start:1
#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.start:1
#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.start:1
msgid ""
"This is invoked when this object is added to the mayavi pipeline.  Note that"
" when start is invoked, all the other information for the pipeline should be"
" already set."
msgstr ""
"これは，このオブジェクトがmayaviパイプラインに追加されたときに呼び出されます．startを呼び出したときに，パイプラインのその他すべての情報がすでに設定されている必要があります．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.stop:1
msgid ""
"Invoked when this object is removed from the mayavi pipeline.  This is where"
" you remove your actors from the scene."
msgstr "このオブジェクトがmayaviパイプラインから削除されると呼び出されます．ここで，シーンからアクターを削除します．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.update_data:1
msgid ""
"Override this method to do what is necessary when upstream data changes."
msgstr "アップストリームデータが変更された場合に必要な処理を実行するには，このメソッドをオーバーライドします．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.update_data:4
#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.update_data:4
msgid ""
"This method is invoked (automatically) when any of the inputs sends a "
"`data_changed` event."
msgstr "このメソッドは，入力のいずれかが `data_changed` イベントを送信したときに(自動的に)呼び出されます．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.update_pipeline:1
#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.update_pipeline:1
msgid ""
"Override this method so that it *updates* the tvtk pipeline when data "
"upstream is known to have changed."
msgstr "上流のデータが変更されたことがわかっている場合にtvtkパイプラインを *更新* するように，このメソッドをオーバーライドします．"

#: ../../mayavi/mayavi/core/filter.pydocstring of
#: mayavi.core.filter.Filter.update_pipeline:4
#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.update_pipeline:4
msgid ""
"This method is invoked (automatically) when the input fires a "
"`pipeline_changed` event."
msgstr "このメソッドは，入力が `pipeline_changed` イベントを起動すると(自動的に)呼び出されます．"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:30
msgid ":class:`ModuleManager`"
msgstr ":class:`ModuleManager`"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager:1
msgid "The module manager node (represented as 'Colors and Legends')."
msgstr "モジュールマネージャーノード( '色と凡例' として表現されます)．"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.update:1
msgid "Update any internal data."
msgstr "内部データを更新します．"

#: ../../mayavi/mayavi/core/module_manager.pydocstring of
#: mayavi.core.module_manager.ModuleManager.update:3
msgid ""
"This is invoked when the source changes or when there are pipeline/data "
"changes upstream."
msgstr "これは，ソースが変更された場合，または上流でパイプライン/データが変更された場合に呼び出されます．"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:36
msgid ":class:`Module`"
msgstr ":class:`Module`"

#: ../../mayavi/mayavi/core/module.pydocstring of mayavi.core.module.Module:1
msgid "Base class for the Mayavi modules."
msgstr "Mayaviモジュールの基本クラス．"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.setup_pipeline:1
msgid "Override this method so that it *creates* the tvtk pipeline."
msgstr "このメソッドをオーバーライドして，tvtkパイプラインを *作成* します．"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.setup_pipeline:4
msgid ""
"This method is invoked when the object is initialized via `__init__`.  Note "
"that at the time this method is called, the tvtk data pipeline will *not* "
"yet be setup.  So upstream data will not be available.  The idea is that you"
" simply create the basic objects and setup those parts of the pipeline not "
"dependent on upstream sources and filters.  You should also set the `actors`"
" attribute up at this point."
msgstr ""
"このメソッドは， `__init__` "
"を介してオブジェクトが初期化されたときに呼び出されます．このメソッドが呼び出された時点では，tvtkデータパイプラインはまだ設定されていないことに注意してください．したがって，アップストリームデータは使用できません．基本的なオブジェクトを作成し，上流のソースおよびフィルタに依存"
" *しない* パイプラインのこれらの部分を設定するだけです．この時点で `actors` 属性も設定する必要があります．"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.tno_allows_children:1
msgid "Returns whether chidren of this object are allowed or not."
msgstr "このオブジェクトの子が許可されているかどうかを返します．"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.tno_get_children:1
msgid "Gets the object's children."
msgstr "オブジェクトの子を取得します．"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.tno_has_children:1
msgid "Returns whether or not the object has children."
msgstr "オブジェクトに子があるかどうかを返します．"

#: ../../mayavi/mayavi/core/module.pydocstring of
#: mayavi.core.module.Module.update_data:1
msgid ""
"Override this method so that it flushes the vtk pipeline if that is "
"necessary."
msgstr "必要に応じてvtkパイプラインがフラッシュされるように，このメソッドをオーバーライドします．"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:43
msgid ":class:`PipelineBase`"
msgstr ":class:`PipelineBase`"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase:1
msgid "Base class for all the Source, Filters and Modules in the pipeline."
msgstr "パイプライン内のすべてのSource，Filters，およびModulesの基本クラス．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.add_actors:1
msgid "Adds `self.actors` to the scene."
msgstr "シーンに `self.actors` を追加します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.add_actors:3
msgid ""
"This is typically called when start is invoked.  You should avoid calling "
"this unless you know what you are doing."
msgstr "これは通常，startが呼び出されたときに呼び出されます．自分が何をしているかを知らない限り，これを呼ぶのは避けるべきです．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.configure_connection:1
msgid "Configure topology for vtk pipeline obj."
msgstr "vtkパイプラインobjのトポロジを設定します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.configure_input:1
msgid "Configure the inp using op."
msgstr "opコマンドを使ってinpを設定します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.configure_input_data:1
msgid "Configure the input data for vtk pipeline object obj."
msgstr "vtkパイプラインオブジェクトobjの入力データを設定します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.configure_source_data:1
msgid "Configure the source data for vtk pipeline object obj."
msgstr "vtkパイプラインオブジェクトobjのソースデータを設定します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.get_output_dataset:1
msgid "Return the output dataset of this object."
msgstr "このオブジェクトの出力データセットを返します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.get_output_object:1
msgid ""
"We assume the old pipeline topology. As such we return the first output."
msgstr "古いパイプライントポロジを仮定します．そのため，最初の出力を返します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.has_output_port:1
msgid ""
"We assume the old pipeline topology. As such we assume no output_port "
"exists."
msgstr "古いパイプライントポロジを仮定します．したがって，output_portが存在しないと仮定します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.remove_actors:1
msgid "Removes `self.actors` from the scene."
msgstr "シーンから `self.actors` を削除します．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.remove_actors:3
msgid ""
"This is typically called when stop is invoked.  You should avoid calling "
"this unless you know what you are doing."
msgstr "これは通常，stopが呼び出されたときに呼び出されます．自分が何をしているかを知らない限り，これを呼ぶのは避けるべきです．"

#: ../../mayavi/mayavi/core/pipeline_base.pydocstring of
#: mayavi.core.pipeline_base.PipelineBase.render:1
msgid ""
"Invokes render on the scene, this in turn invokes Render on the VTK "
"pipeline."
msgstr "シーンのレンダリングを呼び出し，次にVTKパイプラインのレンダリングを呼び出します．"

#: ../../mayavi/docs/source/mayavi/api/pipeline_objects.rst:49
msgid ":class:`Engine`"
msgstr ":class:`Engine`"

#: ../../mayavi/mayavi/core/engine.pydocstring of mayavi.core.engine.Engine:1
msgid "Bases: :py:class:`~traits.has_traits.HasStrictTraits`"
msgstr "ベースクラス: :py:class:`~traits.has_traits.HasStrictTraits`"

#: ../../mayavi/mayavi/core/engine.pydocstring of mayavi.core.engine.Engine:1
msgid "The Mayavi engine base class."
msgstr "Mayaviエンジンの基本クラス．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Adds a filter to the pipeline at an appropriate point. Adds it to the "
"selected object, or to an object passed as the kwarg `obj`."
msgstr ""
"パイプラインの適切なポイントにフィルタを追加します．選択したオブジェクト，またはkwarg `obj` として渡されたオブジェクトに追加します．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Adds a module to the pipeline at an appropriate point. Adds it to the "
"selected object, or to an object passed through the kwarg `obj`."
msgstr ""
"適切なポイントでパイプラインにモジュールを追加します．選択したオブジェクト，またはkwarg `obj` を介して渡されたオブジェクトに追加します．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.add_scene:1
msgid ""
"Add given `scene` (a `pyface.tvtk.scene.Scene` instance) to the mayavi "
"engine so that mayavi can manage the scene.  This is used when the user "
"creates a scene.  Note that for the `EnvisageEngine` this is automatically "
"taken care of when you create a new scene using the TVTK scene plugin."
msgstr ""
"指定された `scene` ( `pyface.tvtk.scene.Scene` "
"インスタンス)をmayaviエンジンに追加して，mayaviがシーンを管理できるようにします．これは，ユーザがシーンを作成するときに使用されます． "
"`EnvisageEngine` の場合，TVTK シーンプラグインを使用して新しいシーンを作成すると，この処理が自動的に行われます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:5
#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:8
#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:12
#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.add_scene:8
#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.get_viewer:4
msgid "Parameters:"
msgstr "パラメータ:"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:10
#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.add_scene:10
msgid "scene - `pyface.tvtk.scene.Scene`"
msgstr "scene - `pyface.tvtk.scene.Scene`"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.add_scene:12
msgid "The scene that needs to be managed from mayavi."
msgstr "mayaviから管理する必要があるシーン．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.add_scene:14
msgid "name - `str`"
msgstr "name - `str`"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.add_scene:15
msgid ""
"The name assigned to the scene.  It tries to determine the name of the scene"
" from the passed scene instance.  If this is not possible it defaults to "
"'Mayavi Scene'."
msgstr ""
"シーンに割り当てられた名前．渡されたシーンインスタンスからシーンの名前を決定しようとします．これが不可能な場合は，デフォルトの 'Mayavi "
"Scene' が使用されます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Adds a source to the pipeline. Uses the current scene unless a scene is "
"given in the scene keyword argument."
msgstr "ソースをパイプラインに追加します．sceneキーワード引数でシーンが指定されていない場合は，現在のシーンを使用します．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Given a scene created from new_scene, this method closes it and removes the "
"scene from the list of scenes we manage."
msgstr "new_sceneから作成されたシーンがある場合，このメソッドはそのシーンを閉じ，管理するシーンのリストからそのシーンを削除します．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:7
msgid ""
"scene - `pyface.tvtk.scene.Scene` or an object that holds a reference to a "
"`pyface.tvtk.scene.Scene` in a `scene` attribute."
msgstr ""
"scene - `pyface.tvtk.scene.Scene` または `scene` アトリビュート内の "
"`pyface.tvtk.scene.Scene` へのリファレンスを保持するオブジェクト．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.dialog_view:1
msgid "Default dialog view for Engine objects."
msgstr "Engineオブジェクトのデフォルトのダイアログビュー．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.get_viewer:1
msgid "Return the viewer associated with a given scene."
msgstr "特定のシーンに関連付けられたビューアを返します．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.get_viewer:5
msgid "scene - An `mayavi.core.scene.Scene` instance."
msgstr "scene - `mayavi.core.scene.Scene` インスタンス．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid "Given a file/file name this loads the visualization."
msgstr "ファイル/ファイル名を指定すると，ビジュアライゼーションがロードされます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Create or manage a new VTK scene window.  If no `viewer` argument is "
"provided, the method creates a new viewer using `self.scene_factory`.  If "
"`self.scene_factory` is `None` then it creates an `ivtk` viewer.  This code "
"requires that the `viewer` has a `scene` attribute/trait that is a "
"`pyface.tvtk.scene.Scene`.  It also works best if the viewer supports "
"`closing` and `activated` events."
msgstr ""
"新しいVTKシーンウィンドウを作成または管理します． `viewer` 引数が指定されていない場合は， `self.scene_factory` "
"を使用して新しいビューアが作成されます． `self.scene_factory` が `None` の場合は， `ivtk` "
"ビューアが作成されます．このコードでは， `viewer` が `pyface.tvtk.scene.Scene` である `scene` "
"属性/traitを持っている必要があります．また，ビューアが `closing` および `activated` "
"イベントをサポートしている場合にも最適です．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:9
msgid "The method returns the created viewer."
msgstr "作成されたビューアを返します．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:14
msgid "viewer - The viewer object, if None, one is created for you."
msgstr "viewer -なしの場合はビューアオブジェクトが作成されます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:16
msgid "name - The name attribute of the viewer"
msgstr "name - ビューアの名前属性"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:18
msgid ""
"``**kwargs`` - The extra keyword arguments are passed along to the scene "
"factory."
msgstr "``**kwargs`` - 追加のキーワード引数がシーンファクトリに渡されます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Open a file given a filename if possible in either the current scene or the "
"passed `scene`."
msgstr "可能であれば，カレントシーンまたは渡された `scene` でファイル名を指定してファイルを開きます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.record:1
msgid ""
"This is merely a convenience method to record messages to the script "
"recorder."
msgstr "これは単に，スクリプトレコーダにメッセージを記録するための便利な方法です．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Remove a given `scene` (a `pyface.tvtk.scene.Scene` instance) from the "
"mayavi engine if it is already being managed by mayavi.  Note that for the "
"`EnvisageEngine` this is automatically taken care of when you close a scene "
"started using the TVTK scene plugin."
msgstr ""
"指定したAAA(BBBインスタンス)がmayaviによってすでに管理されている場合は，mayaviエンジンから削除します．CCCの場合，TVTK "
"シーンプラグインを使用して開始したシーンを閉じると，この処理が自動的に行われます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:12
msgid "The scene that needs to be removed from mayavi."
msgstr "mayaviから削除する必要があるシーン．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: apptools.scripting.recordable.recordable.<locals>._wrapper:1
msgid ""
"Given a file or a file name, this saves the current visualization to the "
"file."
msgstr "ファイル名またはファイル名を指定すると，現在のビジュアライゼーションがファイルに保存されます．"

#: ../../mayavi/mayavi/core/engine.pydocstring of
#: mayavi.core.engine.Engine.start:1
msgid "This is called by the plugin when the plugin actually starts."
msgstr "これは，プラグインが実際に起動したときにプラグインによって呼び出されます．"
