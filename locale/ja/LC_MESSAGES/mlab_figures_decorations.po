# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008-2018, Enthought Inc.
# This file is distributed under the same license as the mayavi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mayavi 4.8.1.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-18 02:20+0000\n"
"PO-Revision-Date: 2019-04-27 07:31+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2021\n"
"Language-Team: Japanese (https://www.transifex.com/tkoyama010/teams/98399/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:3
msgid "Figures, legends, camera and decorations"
msgstr "図，凡例，カメラ，デコレーション"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:6
msgid "Handling several figures"
msgstr "複数の図を処理する"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:8
msgid ""
"All mlab functions operate on the current scene, that we also call "
":func:`figure`, for compatibility with matlab and pylab. The different "
"figures are indexed by key that can be an integer or a string. A call to the"
" :func:`figure` function giving a key will either return the corresponding "
"figure, if it exists, or create a new one. The current figure can be "
"retrieved with the :func:`gcf` function. It can be refreshed using the "
":func:`draw` function, saved to a picture file using :func:`savefig` and "
"cleared using :func:`clf`."
msgstr ""
"すべてのmlab関数は，matlabとpylabとの互換性を保つために， "
":func:`figure`とも呼ぶ現在のシーンで動作します．異なる図は，整数または文字列のキーによってインデックスが付けられます． "
":func:`figure` 関数を呼び出してキーを指定すると，対応する図が存在する場合はそれを返すか，新しい図を作成します．現在の図は， "
":func:`gcf` 関数で検索できます．これは :func:`draw` 関数を使ってリフレッシュでき， :func:`savefig` "
"を使って画像ファイルに保存し， :func:`clf` を使って消去できます．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:19
msgid "Figure decorations"
msgstr "図のデコレーション"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:21
msgid ""
"Axes can be added around a visualization object with the :func:`axes` "
"function, and the labels can be set using the :func:`xlabel`, :func:`ylabel`"
" and :func:`zlabel` functions. Similarly, :func:`outline` creates an outline"
" around an object. :func:`title` adds a title to the figure."
msgstr ""
"軸は :func:`axes` 関数を使って可視化オブジェクトの周りに追加でき，ラベルは :func:`xlabel`, :func:`ylabel` "
":func:`zlabel` 関数を使って設定できます．同様に， :func:`outline` はオブジェクトの周りにアウトラインを作成します． "
":func:`title` は図形にタイトルを追加します．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:26
msgid ""
"Color bars can be used to reflect the color maps used to display values "
"(LUT, or lookup tables, in VTK parlance). :func:`colorbar` creates a color "
"bar for the last object created, trying to guess whether to use the vector "
"data or the scalar data color maps. The :func:`scalarbar` and "
":func:`vectorbar` function scan be used to create color bars specifically "
"for scalar or vector data."
msgstr ""
"カラーバーは，値の表示に使用されるカラーマップを反映するために使用できます(VTK用語でのLUTまたはルックアップテーブル)． "
":func:`colorbar` "
"は，最後に作成されたオブジェクトのカラーバーを作成し，ベクトルデータとスカラデータのカラーマップのどちらを使用するかを推測します． "
":func:`scalarbar` および :func:`vectorbar` "
"関数スキャンを使用して，スカラーまたはベクトルデータ専用のカラーバーを作成します．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:33
msgid ""
"A small *xyz* triad can be added to the figure using "
":func:`orientation_axes`."
msgstr "小さな *xyz* 座標系を図形に追加するには， :func:`orientation_axes` を使用します．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:36
msgid ""
"The :func:`orientation_axes` was named `orientationaxes` before release 3.2."
msgstr ":func:`orientation_axes` はリリース3.2以前は `orientationaxes` という名前でした．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:40
msgid "Moving the camera"
msgstr "カメラを移動する"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:42
msgid ""
"The position and direction of the camera can be set using the :func:`view` "
"function. They are described in terms of Euler angles and distance to a "
"focal point. The :func:`view` function tries to guess the right roll angle "
"of the camera for a pleasing view, but it sometimes fails. The :func:`roll` "
"explicitly sets the roll angle of the camera (this can be achieve "
"interactively in the scene by pressing down the control key, while dragging "
"the mouse, see :ref:`interaction-with-the-scene`)."
msgstr ""
"カメラの位置と方向は， :func:`view` 関数を使用して設定できます．オイラー角と焦点までの距離で記述した． :func:`view` "
"関数は，ビューを見やすくするためにカメラの右ロール角を推測しようとしますが，失敗することがあります． :func:`roll` "
"は，カメラのロール角度を明示的に設定します(これは，コントロールキーを押しながらマウスをドラッグすることで，シーン内でインタラクティブに行うことができます．"
" :ref:`interaction-with-the-scene` を参照してください．)．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:50
msgid ""
"The :func:`view` and :func:`roll` functions return the current values of the"
" different angles and distances they take as arguments. As a result, the "
"view point obtained interactively can be stored and reset using::"
msgstr ""
":func:`view` と :func:`roll` "
"関数は，引数として取る角度と距離の現在値を返します．その結果，対話的に取得した視点は，以下を使用して保存およびリセットできます．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rstNone
msgid "Rotating the camera around itself"
msgstr "カメラの回転"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:64
msgid ""
"You can also rotate the camera around itself using the `roll`, `yaw` and "
"`pitch` methods of the camera object. This moves the focal point::"
msgstr ""
"また，カメラオブジェクトの `roll`，`yaw` ，`pitch` "
"メソッドを使用して，カメラを自分自身の周りで回転させることもできます．これにより，焦点が移動します．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:71
msgid ""
"Unlike the :func:`view` and :func:`roll` function, the angles are "
"incremental, and not absolute."
msgstr ":func:`view` および :func:`roll` 関数とは異なり，角度は増分であり，絶対角度ではありません．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rstNone
msgid "Modifying zoom and view angle"
msgstr "ズームとビュー角度を修正する"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:76
msgid ""
"The camera is entirely defined by its position, its focal point, and its "
"view angle (attributes 'position', 'focal_point', 'view_angle'). The camera "
"method 'zoom' changes the view angle incrementally by the specify ratio, "
"where as the method 'dolly' translates the camera along its axis while "
"keeping the focal point constant. The :func:`move` function can also be "
"useful in these regards."
msgstr ""
"カメラは，その位置，焦点，ビュー角度( 'position' ,  'focal_point' , 'view_angle' "
"属性)によって完全に定義されます．カメラを使用する方法 'zoom' では，指定した比率の分だけビュー角度が変化します．この方法 'dolly' "
"では，焦点を一定に保ちながら，カメラが軸に沿って移動します． :func:`move` 関数もこれらの点で有用です．"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:83
msgid "Camera parallel scale"
msgstr "カメラの平行スケール"

#: ../../mayavi/docs/source/mayavi/mlab_figures_decorations.rst:85
msgid ""
"In addition to the information returned and set by mlab.view and mlab.roll, "
"a last parameter is needed to fully define the view point: the parallel "
"scale of the camera, that control its view angle. It can be read (or set) "
"with the following code::"
msgstr ""
"mlab.view と mlab.roll "
"によって返され設定される情報に加えて，ビューポイントを完全に定義するには，最後のパラメータはビュー角度を制御するカメラの平行スケールです．次のコードで読み取る(または設定する)ことができます．"
